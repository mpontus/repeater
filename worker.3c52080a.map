{"version":3,"sources":["worker.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,MAAc,IAApB;AAEA,IAAM,YAAY,GAAlB;AAEA,IAAM,kBAAkB,EAAxB;AACA,IAAM,aAAa,KAAnB;AAEA,IAAM,SAAS,IAAI,YAAJ,CAAiB,kBAAkB,UAAnC,CAAf,EAA+D;AAC/D,IAAI,SAAS,CAAb;AACA,IAAI,mBAAmB,KAAvB;AAEA,IAAM,iBAAiB,SAAjB,cAAiB,CAAC,OAAD,EAAsB;AAC3C,WAAA,QAAQ,MAAR,CAAe,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,eAAA,IAAI,KAAK,GAAL,CAAS,CAAT,CAAJ;AAAe,KAAxC,EAA0C,CAA1C,IAA+C,SAA/C;AAAwD,CAD1D;AAGA,IAAI,SAAJ,GAAgB,UAAA,CAAA,EAAC;AACf,QAAM,MAAoB,EAAE,IAA5B,CADe,CACmB;AAElC;AACA;AAEA,QAAM,aAAa,eAAe,GAAf,CAAnB;AAEA,QAAI,CAAC,gBAAL,EAAuB;AACrB,YAAI,UAAJ,EAAgB;AACd,+BAAmB,IAAnB;AACA,mBAAO,IAAP,CAAY,CAAZ;AAEA,gBAAI,WAAJ,CAAgB,EAAE,MAAM,MAAR,EAAhB;AACD;AACF;AAED,QAAI,gBAAJ,EAAsB;AACpB,YAAI,SAAS,IAAI,MAAb,GAAsB,OAAO,MAAjC,EAAyC;AACvC;AACD;AAED,eAAO,GAAP,CAAW,GAAX,EAAgB,MAAhB;AACA,kBAAU,IAAI,MAAd;AACD;AAED,QAAI,gBAAJ,EAAsB;AACpB,YAAI,CAAC,UAAL,EAAiB;AACf,+BAAmB,KAAnB;AACA,gBAAI,WAAJ,CAAgB,EAAE,MAAM,OAAR,EAAiB,SAAS,MAA1B,EAAhB;AACA,qBAAS,CAAT;AACD;AACF;AACF,CAjCD","file":"worker.3c52080a.map","sourceRoot":"..","sourcesContent":["const ctx: Worker = self as any;\n\nconst THRESHOLD = 200;\n\nconst lengthInSeconds = 60;\nconst sampleRate = 44100;\n\nconst buffer = new Float32Array(lengthInSeconds * sampleRate); // 44100 * seconds\nlet offset = 0;\nlet recordingStarted = false;\n\nconst isHearingVoice = (samples: Float32Array) =>\n  samples.reduce((a, b) => a + Math.abs(b), 0) > THRESHOLD;\n\nctx.onmessage = e => {\n  const pcm: Float32Array = e.data; // 4096\n\n  // const averageIntensity =\n  //   pcm.map(Math.abs).reduce((acc, val) => acc + val, 0) / pcm.length;\n\n  const loudEnough = isHearingVoice(pcm);\n\n  if (!recordingStarted) {\n    if (loudEnough) {\n      recordingStarted = true;\n      buffer.fill(0);\n\n      ctx.postMessage({ type: \"stop\" });\n    }\n  }\n\n  if (recordingStarted) {\n    if (offset + pcm.length > buffer.length) {\n      return;\n    }\n\n    buffer.set(pcm, offset);\n    offset += pcm.length;\n  }\n\n  if (recordingStarted) {\n    if (!loudEnough) {\n      recordingStarted = false;\n      ctx.postMessage({ type: \"start\", payload: buffer });\n      offset = 0;\n    }\n  }\n};\n"]}